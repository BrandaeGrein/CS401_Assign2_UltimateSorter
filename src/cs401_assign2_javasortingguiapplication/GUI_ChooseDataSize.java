/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cs401_assign2_javasortingguiapplication;

import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;



/**
 *
 * @author Brandae2
 */
public class GUI_ChooseDataSize extends javax.swing.JFrame {
    public DataObject generate = new DataObject();
    public AlgorithmManager manager = new AlgorithmManager();
    public GUI_ChooseDataSize() {
        
        
        initComponents();
    }
    public void setComponentsInvisible(){
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFrame1 = new javax.swing.JFrame();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        SizeOfNField = new javax.swing.JTextField();
        RandomizeDataButton = new javax.swing.JButton();
        SortedDataButton = new javax.swing.JButton();
        SelectionSortButton = new javax.swing.JButton();
        InsertionSortButton = new javax.swing.JButton();
        ShellSortButton = new javax.swing.JButton();
        BubbleSortButton = new javax.swing.JButton();
        MergeSortButton = new javax.swing.JButton();
        QuickSortButton = new javax.swing.JButton();
        HeapSortButton = new javax.swing.JButton();
        RunningTimeTextField = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        filePathLabel = new javax.swing.JLabel();

        javax.swing.GroupLayout jFrame1Layout = new javax.swing.GroupLayout(jFrame1.getContentPane());
        jFrame1.getContentPane().setLayout(jFrame1Layout);
        jFrame1Layout.setHorizontalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        jFrame1Layout.setVerticalGroup(
            jFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 457));

        jLabel1.setFont(new java.awt.Font("Lucida Grande", 0, 24)); // NOI18N
        jLabel1.setText("Welcome to the ultimate sorter 3000!");

        jLabel2.setText("To get started, please enter in the size of the data you'd like to try sorting. ");

        jLabel3.setText("Hint: You can enter in any number between 1 and 500,000!");

        RandomizeDataButton.setText("Randomize my data!");
        RandomizeDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RandomizeDataButtonActionPerformed(evt);
            }
        });

        SortedDataButton.setText("Sort my data!");
        SortedDataButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SortedDataButtonActionPerformed(evt);
            }
        });

        SelectionSortButton.setText("Selection Sort");
        SelectionSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SelectionSortButtonActionPerformed(evt);
            }
        });

        InsertionSortButton.setText("Insertion Sort");
        InsertionSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                InsertionSortButtonActionPerformed(evt);
            }
        });

        ShellSortButton.setText("Shell Sort");
        ShellSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ShellSortButtonActionPerformed(evt);
            }
        });

        BubbleSortButton.setText("Bubble Sort");
        BubbleSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BubbleSortButtonActionPerformed(evt);
            }
        });

        MergeSortButton.setText("Merge Sort");
        MergeSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MergeSortButtonActionPerformed(evt);
            }
        });

        QuickSortButton.setText("Quick Sort");
        QuickSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuickSortButtonActionPerformed(evt);
            }
        });

        HeapSortButton.setText("Heap Sort");
        HeapSortButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HeapSortButtonActionPerformed(evt);
            }
        });

        RunningTimeTextField.setHorizontalAlignment(javax.swing.JTextField.RIGHT);

        jLabel4.setText("Here's your run time of that sort:");

        jLabel5.setText("milliseconds");

        filePathLabel.setText("Select a data size before you sort!");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jLabel3)
                                .addComponent(RandomizeDataButton))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SizeOfNField, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(252, 252, 252)
                                .addComponent(SortedDataButton))
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(BubbleSortButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(HeapSortButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(QuickSortButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(MergeSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(RunningTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jLabel5))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(622, 622, 622)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 435, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(SelectionSortButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(InsertionSortButton)
                                .addGap(18, 18, 18)
                                .addComponent(ShellSortButton))
                            .addComponent(filePathLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 522, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(37, 37, 37)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SizeOfNField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(RandomizeDataButton)
                    .addComponent(SortedDataButton))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(filePathLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SelectionSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(ShellSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(InsertionSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(QuickSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BubbleSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(MergeSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 48, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(HeapSortButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(RunningTimeTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addGap(81, 81, 81))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    
    private void SortedDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SortedDataButtonActionPerformed
        String nString = SizeOfNField.getText().toString();
        
        int n = Integer.parseInt(nString);
        try {
            manager.setSortedData(n);
        } catch (IOException ex) {
            Logger.getLogger(GUI_ChooseDataSize.class.getName()).log(Level.SEVERE, null, ex);
        }
        String filePath = System.getProperty("user.dir");
        filePathLabel.setText("Your file is now stored at "+filePath+"/sorted500000");
        
    }//GEN-LAST:event_SortedDataButtonActionPerformed

    private void QuickSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuickSortButtonActionPerformed
        String time = "";
        try {
            time = Long.toString(manager.runQuickSort());
        } catch (IOException ex) {
            Logger.getLogger(GUI_ChooseDataSize.class.getName()).log(Level.SEVERE, null, ex);
        }
        RunningTimeTextField.setText(time);
        
    }//GEN-LAST:event_QuickSortButtonActionPerformed

    private void InsertionSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_InsertionSortButtonActionPerformed
        String time = "";
        try {
            time = Long.toString(manager.runInsertionSort());
        } catch (IOException ex) {
            Logger.getLogger(GUI_ChooseDataSize.class.getName()).log(Level.SEVERE, null, ex);
        }
        RunningTimeTextField.setText(time);
    }//GEN-LAST:event_InsertionSortButtonActionPerformed

    private void RandomizeDataButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RandomizeDataButtonActionPerformed
        String nString = SizeOfNField.getText().toString();
        int n = Integer.parseInt(nString);
        try {
            manager.setUnsortedData(n);
        } catch (IOException ex) {
            Logger.getLogger(GUI_ChooseDataSize.class.getName()).log(Level.SEVERE, null, ex);
        }
        String filePath = System.getProperty("user.dir");
        filePathLabel.setText("Your file is now stored at "+filePath+"/random500000");
        
    }//GEN-LAST:event_RandomizeDataButtonActionPerformed

    private void SelectionSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SelectionSortButtonActionPerformed
        String time = "";
        try {
            time = Long.toString(manager.runSelectionSort());
        } catch (IOException ex) {
            Logger.getLogger(GUI_ChooseDataSize.class.getName()).log(Level.SEVERE, null, ex);
        }
        RunningTimeTextField.setText(time);
    }//GEN-LAST:event_SelectionSortButtonActionPerformed

    private void MergeSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MergeSortButtonActionPerformed
        String time = "";
        try {
            time = Long.toString(manager.runMergeSort());
        } catch (IOException ex) {
            Logger.getLogger(GUI_ChooseDataSize.class.getName()).log(Level.SEVERE, null, ex);
        }
        RunningTimeTextField.setText(time);
        
    }//GEN-LAST:event_MergeSortButtonActionPerformed

    private void BubbleSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BubbleSortButtonActionPerformed
        String time = "";
        try {
            time = Long.toString(manager.runBubbleSort());
        } catch (IOException ex) {
            Logger.getLogger(GUI_ChooseDataSize.class.getName()).log(Level.SEVERE, null, ex);
        }
        RunningTimeTextField.setText(time);
        
    }//GEN-LAST:event_BubbleSortButtonActionPerformed

    private void ShellSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ShellSortButtonActionPerformed
        String time = "";
        try {
            time = Long.toString(manager.runShellSort());
        } catch (IOException ex) {
            Logger.getLogger(GUI_ChooseDataSize.class.getName()).log(Level.SEVERE, null, ex);
        }
        RunningTimeTextField.setText(time);
        
    }//GEN-LAST:event_ShellSortButtonActionPerformed

    private void HeapSortButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HeapSortButtonActionPerformed
        String time = "";
        try {
            time = Long.toString(manager.runHeapSort());
        } catch (IOException ex) {
            Logger.getLogger(GUI_ChooseDataSize.class.getName()).log(Level.SEVERE, null, ex);
        }
        RunningTimeTextField.setText(time);
    }//GEN-LAST:event_HeapSortButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI_ChooseDataSize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI_ChooseDataSize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI_ChooseDataSize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI_ChooseDataSize.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new GUI_ChooseDataSize().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BubbleSortButton;
    private javax.swing.JButton HeapSortButton;
    private javax.swing.JButton InsertionSortButton;
    private javax.swing.JButton MergeSortButton;
    private javax.swing.JButton QuickSortButton;
    private javax.swing.JButton RandomizeDataButton;
    private javax.swing.JTextField RunningTimeTextField;
    private javax.swing.JButton SelectionSortButton;
    private javax.swing.JButton ShellSortButton;
    private javax.swing.JTextField SizeOfNField;
    private javax.swing.JButton SortedDataButton;
    private javax.swing.JLabel filePathLabel;
    private javax.swing.JFrame jFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    // End of variables declaration//GEN-END:variables
}
